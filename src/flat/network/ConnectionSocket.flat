package flat/network

import flat/io/InputStream
import flat/io/OutputStream
import flat/datastruct/list/Queue

class ConnectionSocket extends Socket {
  visible var Bool connected

  visible InputStream  in
  visible OutputStream out

  Queue<String> inputBuffer = Queue()

  public validateConnection() => false {
    if (connected) {
      let message = readString(false)

      if (connected) {
        inputBuffer.enqueue(message)

        return true
      }
    }
  }

  public readString() => readString(true)

  readString(Bool checkBuffer) -> String {
    return null
  }

  public write(String data) => false
}